const e='{"documentCount":46,"nextId":46,"documentIds":{"0":"/api-examples.html#runtime-api-examples","1":"/api-examples.html#results","2":"/api-examples.html#theme-data","3":"/api-examples.html#page-data","4":"/api-examples.html#page-frontmatter","5":"/api-examples.html#more","6":"/markdown-examples.html#markdown-extension-examples","7":"/markdown-examples.html#syntax-highlighting","8":"/markdown-examples.html#custom-containers","9":"/markdown-examples.html#more","10":"/note/javaSE/集合.html#集合","11":"/note/javaSE/集合.html#java集合体系图","12":"/note/javaSE/集合.html#iterable","13":"/note/javaSE/集合.html#collection","14":"/note/javaSE/集合.html#collection遍历","15":"/note/javaSE/集合.html#list","16":"/note/javaSE/集合.html#arraylist","17":"/note/javaSE/集合.html#arraylist特性","18":"/note/javaSE/集合.html#源码-调用无参构造器","19":"/note/javaSE/集合.html#源码-使用有参构造器","20":"/note/javaSE/集合.html#源码-添加元素","21":"/note/javaSE/集合.html#vector","22":"/note/javaSE/集合.html#vector特性","23":"/note/javaSE/集合.html#源码-无参构造器","24":"/note/javaSE/集合.html#源码-有参有构造器","25":"/note/javaSE/集合.html#源码-添加元素-1","26":"/note/javaSE/集合.html#linkedlist","27":"/note/javaSE/集合.html#linkedlist特性","28":"/note/javaSE/集合.html#源码-添加元素-2","29":"/note/javaSE/集合.html#set","30":"/note/javaSE/集合.html#hashset","31":"/note/javaSE/集合.html#linkedhashset","32":"/note/javaSE/集合.html#待补充-treeset","33":"/note/javaSE/集合.html#map","34":"/note/javaSE/集合.html#entryset","35":"/note/javaSE/集合.html#map的遍历","36":"/note/javaSE/集合.html#hashmap","37":"/note/javaSE/集合.html#源码-添加元素-3","38":"/note/javaSE/集合.html#源码-resize","39":"/note/javaSE/集合.html#补充-关于hashcode和equals","40":"/note/javaSE/集合.html#hashcode","41":"/note/javaSE/集合.html#equals","42":"/note/javaSE/集合.html#linkedhashmap","43":"/note/javaSE/集合.html#hashtable","44":"/note/javaSE/集合.html#待补充-propertise","45":"/note/javaSE/集合.html#待补充-treemap"},"fieldIds":{"title":0,"titles":1,"text":2},"fieldLength":{"0":[3,1,51],"1":[1,3,1],"2":[2,4,2],"3":[2,4,2],"4":[2,4,2],"5":[1,3,11],"6":[3,1,14],"7":[2,3,26],"8":[2,3,21],"9":[1,3,11],"10":[1,1,3],"11":[1,1,2],"12":[1,1,33],"13":[1,1,28],"14":[1,2,42],"15":[1,1,39],"16":[1,1,67],"17":[1,2,14],"18":[2,2,21],"19":[2,2,23],"20":[2,2,94],"21":[1,1,36],"22":[1,2,26],"23":[2,2,23],"24":[2,2,10],"25":[2,2,52],"26":[1,1,41],"27":[1,2,9],"28":[2,2,38],"29":[1,1,13],"30":[1,1,29],"31":[1,1,5],"32":[2,1,2],"33":[1,1,43],"34":[1,2,64],"35":[1,2,36],"36":[1,1,97],"37":[2,2,135],"38":[2,2,88],"39":[3,2,1],"40":[2,5,64],"41":[2,5,20],"42":[1,1,30],"43":[1,1,23],"44":[2,1,2],"45":[2,1,2]},"averageFieldLength":[1.5434782608695652,1.9347826086956526,30.347826086956523],"storedFields":{"0":{"title":"Runtime API Examples","titles":[]},"1":{"title":"Results","titles":["Runtime API Examples"]},"2":{"title":"Theme Data","titles":["Runtime API Examples","Results"]},"3":{"title":"Page Data","titles":["Runtime API Examples","Results"]},"4":{"title":"Page Frontmatter","titles":["Runtime API Examples","Results"]},"5":{"title":"More","titles":["Runtime API Examples"]},"6":{"title":"Markdown Extension Examples","titles":[]},"7":{"title":"Syntax Highlighting","titles":["Markdown Extension Examples"]},"8":{"title":"Custom Containers","titles":["Markdown Extension Examples"]},"9":{"title":"More","titles":["Markdown Extension Examples"]},"10":{"title":"集合","titles":[]},"11":{"title":"java集合体系图","titles":["集合"]},"12":{"title":"Iterable","titles":["集合"]},"13":{"title":"Collection","titles":["集合"]},"14":{"title":"Collection遍历","titles":["集合","Collection"]},"15":{"title":"List","titles":["集合"]},"16":{"title":"ArrayList","titles":["集合"]},"17":{"title":"ArrayList特性","titles":["集合","ArrayList"]},"18":{"title":"源码-调用无参构造器","titles":["集合","ArrayList"]},"19":{"title":"源码-使用有参构造器","titles":["集合","ArrayList"]},"20":{"title":"源码-添加元素","titles":["集合","ArrayList"]},"21":{"title":"Vector","titles":["集合"]},"22":{"title":"Vector特性","titles":["集合","Vector"]},"23":{"title":"源码-无参构造器","titles":["集合","Vector"]},"24":{"title":"源码-有参有构造器","titles":["集合","Vector"]},"25":{"title":"源码-添加元素","titles":["集合","Vector"]},"26":{"title":"LinkedList","titles":["集合"]},"27":{"title":"LinkedList特性","titles":["集合","LinkedList"]},"28":{"title":"源码-添加元素","titles":["集合","LinkedList"]},"29":{"title":"Set","titles":["集合"]},"30":{"title":"HashSet","titles":["集合"]},"31":{"title":"LinkedHashSet","titles":["集合"]},"32":{"title":"待补充-TreeSet","titles":["集合"]},"33":{"title":"Map","titles":["集合"]},"34":{"title":"EntrySet","titles":["集合","Map"]},"35":{"title":"Map的遍历","titles":["集合","Map"]},"36":{"title":"HashMap","titles":["集合"]},"37":{"title":"源码-添加元素","titles":["集合","HashMap"]},"38":{"title":"源码-resize","titles":["集合","HashMap"]},"39":{"title":"补充-关于hashCode和equals 🙈","titles":["集合","HashMap"]},"40":{"title":"hashCode()","titles":["集合","HashMap","补充-关于hashCode和equals 🙈"]},"41":{"title":"equals()","titles":["集合","HashMap","补充-关于hashCode和equals 🙈"]},"42":{"title":"LinkedHashMap","titles":["集合"]},"43":{"title":"HashTable","titles":["集合"]},"44":{"title":"待补充-Propertise","titles":["集合"]},"45":{"title":"待补充-TreeMap","titles":["集合"]}},"dirtCount":0,"index":[["确保了线程安全性",{"2":{"43":1}}],["确定容量",{"2":{"25":1}}],["确定容量方法",{"2":{"20":1}}],["值进行哈希计算",{"2":{"43":1}}],["没有hashmap中复杂的哈希扰动处理",{"2":{"43":1}}],["没有hashmap的红黑树优化功能",{"2":{"43":1}}],["容量增加时",{"2":{"43":1}}],["负载因子同样为0",{"2":{"43":1}}],["和vector类似​",{"2":{"43":1}}],["和非",{"2":{"16":1}}],["为访问顺序",{"2":{"42":1}}],["为插入顺序",{"2":{"42":1}}],["加载因子",{"2":{"42":1}}],["加载因子也增加为原来的两倍",{"2":{"36":1}}],["的双向链表结构",{"2":{"42":1}}],["的结构",{"2":{"42":1}}],["同时多了before和after两个属性",{"2":{"42":1}}],["同时map中的entry接口提供了两个重要方法getkey和getvalue可以很方便地获取key和value",{"2":{"34":1}}],["都是数组+链表",{"2":{"42":1}}],["例如给某个employee类重写hashcode方法",{"2":{"40":1}}],["例如integer的hashcode方法如下",{"2":{"40":1}}],["例如integer",{"2":{"40":1}}],["因为可以传入可变参数",{"2":{"40":1}}],["因此适用于需要保证元素顺序的场景",{"2":{"42":1}}],["因此hashmap的entryset中存放的实际上是实现了map中的entry接口的node",{"2":{"34":1}}],["因此此时性能不如arraylist",{"2":{"27":1}}],["因此既可以通过index操作元素",{"2":{"27":1}}],["因此该算法可以简单看成",{"2":{"25":1}}],["因此vector线程安全",{"2":{"21":1}}],["重写某个类的hashcode方法时",{"2":{"40":1}}],["以字符串中的每个字符作为映射返回hashcode值",{"2":{"40":1}}],["他们的hashcode方法都没有调用object的hashcode方法",{"2":{"40":1}}],["数据类型对应的类",{"2":{"40":1}}],["数组中每个元素称为一个桶",{"2":{"36":1}}],["31",{"2":{"40":2}}],["30",{"2":{"36":1}}],["调用arrays类的hashcode",{"2":{"40":1}}],["调用的仍然是object类的hashcode",{"2":{"40":1}}],["调用无参构造器",{"0":{"18":1}}],["与对象的地址有关",{"2":{"40":1}}],["与无参构造器基本相同",{"2":{"24":1}}],["🙈",{"0":{"39":1},"1":{"40":1,"41":1}}],["关于hashcode和equals",{"0":{"39":1},"1":{"40":1,"41":1}}],["补充",{"0":{"39":1},"1":{"40":1,"41":1}}],["更新threshold值",{"2":{"38":1}}],["更新index位置处的元素",{"2":{"15":1}}],["会进行扩容",{"2":{"38":1}}],["会执行默认的序列化逻辑",{"2":{"16":1}}],["表示加载因子",{"2":{"38":1}}],["表示第一次添加数据",{"2":{"38":1}}],["表示当map中的node个数达到桶个数的75",{"2":{"36":1}}],["等价于newcap",{"2":{"38":1}}],["添加完结点后",{"2":{"37":1}}],["添加元素方法",{"2":{"37":1}}],["添加元素至elementdata中",{"2":{"20":1}}],["添加元素",{"0":{"20":1,"25":1,"28":1,"37":1},"2":{"25":1}}],["此时e即为和我们要添加的节点重复的节点",{"2":{"37":1}}],["退出循环",{"2":{"37":1}}],["退出while后",{"2":{"14":1}}],["比较的是两个对象是否是同一个对象或者调用对象的equals方法是否返回true",{"2":{"41":1}}],["比较的是两个对象是否是同一个对象",{"2":{"41":1}}],["比较过程中发现了重复的结点",{"2":{"37":1}}],["比较返回",{"2":{"36":1}}],["链表长度大于等于8",{"2":{"37":1}}],["否则只会执行resize",{"2":{"37":1}}],["否则让l的next指向新结点即可",{"2":{"28":1}}],["内部还会进行一次判断",{"2":{"37":1}}],["就进入树化方法treeifybin",{"2":{"37":1}}],["然后退出循环",{"2":{"37":1}}],["依次比较链表上的各个结点与要添加的结点是否重复",{"2":{"37":1}}],["两个key是同一个对象",{"2":{"37":1}}],["两个node的key是同一个对象",{"2":{"36":1}}],["两个node的hash值相同",{"2":{"36":1}}],["2",{"2":{"37":2,"43":1}}],["判断p是否是红黑树",{"2":{"37":1}}],["判断重复的条件为",{"2":{"37":1}}],["判断两个node是否相同需要同时满足以下条件",{"2":{"36":1}}],["直接以value值作为hashcode值",{"2":{"40":1}}],["直接将该结点放在tab",{"2":{"37":1}}],["直接序列化对象的非",{"2":{"16":1}}],["位置不为空时",{"2":{"37":1}}],["位置",{"2":{"37":1}}],["位置为空时",{"2":{"37":1}}],["位置上原本的结点",{"2":{"37":1}}],["x26",{"2":{"37":9,"38":6,"40":2,"41":2}}],["x3c",{"2":{"0":8,"12":4,"13":6,"14":2,"15":4,"16":3,"20":2,"21":3,"23":1,"25":1,"26":11,"28":3,"29":2,"30":4,"33":5,"34":11,"36":13,"37":4,"38":19,"40":1}}],["||",{"2":{"37":4,"41":1}}],["^",{"2":{"37":1}}],["从这里看出每次扩容时newcap扩容为原来的两倍",{"2":{"38":1}}],["从这里看出hash算法的值由key的hashcode方法决定",{"2":{"37":1}}],["从这里可以得出树化的条件",{"2":{"37":1}}],["从这里可以得出",{"2":{"20":1}}],["由数组中每个对象的hashcode计算出一个综合的result值",{"2":{"40":1}}],["由该node的hash值与桶的个数共同决定",{"2":{"36":1}}],["由于linedlist是链表",{"2":{"27":1}}],["一下是他们的区别",{"2":{"43":1}}],["一般使用objects的hash方法",{"2":{"40":1}}],["一个node要放入哪个桶中",{"2":{"36":1}}],["一开始该指针指向第一个元素之前的位置",{"2":{"14":1}}],["进行一次扰动来生成hash值",{"2":{"36":1}}],["进行特殊处理",{"2":{"20":1,"25":1}}],["每个方法都使用synchronized关键字",{"2":{"43":1}}],["每个node的hash值由其hashcode决定",{"2":{"36":1}}],["每次扩容时的增量",{"2":{"21":1}}],["桶数量扩容为原来的两倍",{"2":{"36":1}}],["桶数量后",{"2":{"36":1}}],["桶可以是一个链表",{"2":{"36":1}}],["懒初始化",{"2":{"36":1}}],["首次添加元素时",{"2":{"36":1}}],["首先对集合的容量进行处理",{"2":{"20":1}}],["中存储的是一个个node",{"2":{"36":1}}],["红黑树",{"2":{"36":1,"42":2}}],["具体实现类是内部类entryset",{"2":{"36":1}}],["具体来说",{"2":{"16":1}}],["6",{"2":{"36":1}}],["64时才会真正进行树化",{"2":{"37":1}}],["64",{"2":{"36":1}}],["unchecked",{"2":{"38":1}}],["untreeify",{"2":{"36":1}}],["used",{"2":{"0":1}}],["usedata",{"2":{"0":3}}],["usage",{"2":{"0":1}}],["8",{"2":{"36":1,"37":1}}],["75倍容量后",{"2":{"38":1}}],["75f",{"2":{"36":1}}],["75",{"2":{"36":1,"38":1,"43":1}}],["默认初始容量为11",{"2":{"43":1}}],["默认初始化桶数量为16",{"2":{"36":1}}],["默认",{"2":{"42":1}}],["默认加载因子",{"2":{"36":1}}],["默认情况下",{"2":{"16":1}}],["最大桶容量",{"2":{"36":1}}],["最小所需长度大于当前长度时扩容",{"2":{"25":1}}],["或者",{"2":{"36":1,"37":1}}],["或是用values遍历value",{"2":{"34":1}}],["或类库提供关于类行为的额外信息",{"2":{"16":1}}],["所以为了方便遍历元素",{"2":{"34":1}}],["所以entryset里面存放的实际上是node",{"2":{"34":1}}],["之所以把node放在entryset中",{"2":{"34":1}}],["里面存放的元素类型用泛型指定为了entry",{"2":{"34":1}}],["总结",{"2":{"34":1}}],["省略了内部成员",{"2":{"34":1}}],["省略了其他成员",{"2":{"34":1}}],["实现了map中的entry接口",{"2":{"34":1}}],["实际存放数据的容器",{"2":{"16":1}}],["继承abstractset",{"2":{"34":1}}],["继承自queue",{"2":{"26":1}}],["用newcap大小来创建table",{"2":{"38":1}}],["用key的equals方法比较后返回true",{"2":{"37":1}}],["用以返回hashmap中的entryset属性",{"2":{"34":1}}],["用来标记不需要序列化的字段",{"2":{"16":1}}],["提供了getkey和getvalue方法",{"2":{"34":1}}],["那么就进行扩容",{"2":{"37":1}}],["那么直接将新结点接在p之后",{"2":{"37":1}}],["那么将该桶转为链表",{"2":{"36":1}}],["那么将该桶转为红黑树",{"2":{"36":1}}],["那么会替换value值",{"2":{"33":1}}],["那么返回default",{"2":{"20":1}}],["要么value用一个静态的公共对象象征性填充",{"2":{"33":1}}],["要么没有value",{"2":{"33":1}}],["在桶数量达到64的情况下",{"2":{"36":1}}],["在collection中",{"2":{"33":1}}],["在index位置处插入一个集合",{"2":{"15":1}}],["在index位置插入元素",{"2":{"15":1}}],["k>",{"2":{"33":1,"34":1}}],["keyset是一个set集合",{"2":{"35":1}}],["keyset",{"2":{"33":1,"34":2,"35":2}}],["key",{"2":{"33":4,"35":3,"36":1,"37":20}}],["k",{"2":{"33":3,"34":7,"36":9,"37":12,"38":9}}],["请期待👊",{"2":{"32":1,"44":1,"45":1}}],["待补充",{"0":{"32":1,"44":1,"45":1}}],["元素的添加和取出顺序一致",{"2":{"31":1}}],["底层维护的是linkedhashmap",{"2":{"31":1}}],["底层维护的是可动态扩容的数组protected",{"2":{"22":1}}],["是否根据访问顺序排序",{"2":{"42":1}}],["是否存在下一个元素",{"2":{"12":1}}],["是因为map系列的集合没有迭代器",{"2":{"34":1}}],["是hashset的子类",{"2":{"31":1}}],["它其实是一个set集合",{"2":{"34":1}}],["它的值为",{"2":{"30":1}}],["它在序列化过程中会被忽略",{"2":{"16":1}}],["但是只使用了hashmap的key",{"2":{"30":1}}],["详情见hashmap",{"2":{"30":1}}],["新建结点",{"2":{"28":1}}],["先初始化table",{"2":{"37":1}}],["先将最后一个结点保存至l中",{"2":{"28":1}}],["先得到集合对应的迭代器",{"2":{"14":1}}],["找到指定索引的元素需要遍历链表",{"2":{"27":1}}],["也可以一棵红黑树",{"2":{"36":1}}],["也可以用keyset遍历key",{"2":{"34":1}}],["也可以当作队列或栈来使用",{"2":{"27":1}}],["也因此在单线程环境下性能不如arraylist",{"2":{"21":1}}],["获取操作",{"2":{"26":1}}],["删除",{"2":{"26":1}}],["队列",{"2":{"26":1}}],["双端队列",{"2":{"26":1}}],["\\tthis",{"2":{"26":3}}],["\\tnode",{"2":{"26":1}}],["拷贝集合",{"2":{"25":1}}],["将table保存在oldtab中",{"2":{"38":1}}],["将所有node保存在一个set中",{"2":{"36":1}}],["将元素放在一个set集合entryset中",{"2":{"34":1}}],["将元素添加至集合尾部",{"2":{"28":1}}],["将newcapacity设置为oldcapacity的两倍",{"2":{"25":1}}],["将elementdata中的内容拷贝至新数组中",{"2":{"20":1}}],["将elementdata初始化为一个object空数组",{"2":{"18":1}}],["且一直不变化",{"2":{"25":1}}],["记录修改次数",{"2":{"25":1,"37":1}}],["有参构造器是自己指定大小",{"2":{"24":1}}],["有参有构造器",{"0":{"24":1}}],["只不过无参构造器是给定默认大小10",{"2":{"24":1}}],["并且null的hash值总是为0",{"2":{"37":1}}],["并且所有node会被重新分配到新的桶中",{"2":{"36":1}}],["并且每次扩容时增加5",{"2":{"22":1}}],["并指定第一次扩容大小为10",{"2":{"23":1}}],["创建一个初始容量为",{"2":{"22":1}}],["5",{"2":{"22":1}}],["5倍",{"2":{"17":2,"20":1}}],["来返回一个线程安全的list",{"2":{"21":1}}],["通常情况下不会使用vector",{"2":{"21":1}}],["通过对hashcode",{"2":{"36":1}}],["通过",{"2":{"16":1}}],["通过迭代器遍历集合",{"2":{"14":1}}],["不要用hashtable🙅",{"2":{"43":1}}],["不再建议使用vector",{"2":{"21":1}}],["不会被保存或传输",{"2":{"16":1}}],["空出的位置填入null",{"2":{"20":1}}],["长度为newcapacity",{"2":{"20":1}}],["而是根据value来计算一个hashcode值",{"2":{"40":1}}],["而是通过自定义序列化函数来进行序列化",{"2":{"16":1}}],["而value则不受限制",{"2":{"33":1}}],["而arrayqueue是对deque的数组实现",{"2":{"26":1}}],["而如果使用指定size的构造器",{"2":{"20":1}}],["使新结点成为last",{"2":{"28":1}}],["使新结点的前趋指向l",{"2":{"28":1}}],["使得newcapacity值为mincapacity",{"2":{"20":1}}],["使用key",{"2":{"36":1}}],["使用迭代器或者增强for",{"2":{"35":1}}],["使用指定大小和指定增量的构造器",{"2":{"22":1}}],["使用指定大小的构造器",{"2":{"22":1}}],["使用指定大小的构造器时",{"2":{"17":1}}],["使用指定容量构造elementdata",{"2":{"19":1}}],["使用有参构造器",{"0":{"19":1}}],["使用无参构造器时",{"2":{"17":1,"22":1}}],["该链表的顺序默认为元素的插入顺序",{"2":{"42":1}}],["该if对这种情况进行处理",{"2":{"20":1}}],["该方法返回集合所需的最小容量",{"2":{"20":1}}],["该方法会覆盖默认的序列化行为",{"2":{"16":1}}],["这是一个空方法",{"2":{"37":2}}],["这是第一次添加元素时的特殊情况",{"2":{"20":1}}],["这个if用以判断需要添加的结点和p指向的结点是否重复",{"2":{"37":1}}],["这个链表",{"2":{"36":1}}],["这个entry是map中的一个接口",{"2":{"34":1}}],["这样就可以使用entryset的迭代器",{"2":{"34":1}}],["这里可以看出每个node包含hash",{"2":{"37":1}}],["这里的key即我们要添加的元素",{"2":{"37":1}}],["这里的defaultcapacity",{"2":{"18":1}}],["这里传入的mincapacity是添加元素后集合的大小",{"2":{"20":1}}],["设置newcapacity为当前集合长度的1",{"2":{"20":1}}],["gt",{"2":{"21":1,"22":4}}],["grow",{"2":{"20":2,"25":2}}],["getvalue",{"2":{"34":1,"35":1}}],["getkey",{"2":{"34":1,"35":1}}],["get",{"2":{"15":1,"33":1,"35":1}}],["即0",{"2":{"40":1}}],["即16",{"2":{"38":1}}],["即只有当table的大小大于",{"2":{"37":1}}],["即除了使用entryset遍历node外",{"2":{"34":1}}],["即允许key不同但value相同",{"2":{"33":1}}],["即确定是否扩容",{"2":{"20":1}}],["即collection集合都有一个iterator迭代器",{"2":{"14":1}}],["无参构造器调用可以指定容量的有参构造器",{"2":{"23":1}}],["无参构造器",{"0":{"23":1},"2":{"18":1}}],["源码",{"0":{"18":1,"19":1,"20":1,"23":1,"24":1,"25":1,"28":1,"37":1,"38":1}}],["初始容量",{"2":{"42":1}}],["初始桶容量",{"2":{"36":1}}],["初始大小为10",{"2":{"22":1}}],["初始大小为指定大小",{"2":{"17":1}}],["初始elementdata容量为0",{"2":{"17":1,"22":1}}],["接下来每次扩容为2倍",{"2":{"22":1}}],["接下来每次扩容为1",{"2":{"17":1}}],["接下来的每次扩容为2倍",{"2":{"22":1}}],["接下来的每次扩容为1",{"2":{"17":1}}],["接口",{"2":{"16":1}}],["扩容算法",{"2":{"25":1}}],["扩容方法",{"2":{"20":1,"25":1}}],["扩容为10",{"2":{"17":1,"22":1}}],["扩容前的默认容量为10",{"2":{"16":1}}],["第一次添加数据时",{"2":{"37":1}}],["第一次添加元素时elementdata的大小将扩容为",{"2":{"20":1}}],["第一次添加元素时elementdata的大小将扩容为10",{"2":{"20":1}}],["第一次添加",{"2":{"17":1,"22":1}}],["可以控制是否按访问顺序进行排序",{"2":{"42":1}}],["可以传入多个对象的可变参数",{"2":{"40":1}}],["可以可以使用增强for和迭代器方式遍历元素",{"2":{"35":1}}],["可以使用增强for和迭代器方式遍历元素",{"2":{"35":1}}],["可以使用collections",{"2":{"21":1}}],["可以分别在队头和队尾对队内元素进行插入",{"2":{"26":1}}],["可以存放一个或多个null",{"2":{"17":1}}],["可以看出i与table当前的最大容量和hash值有关",{"2":{"37":1}}],["可以看出hashmap中的entryset字段是一个set",{"2":{"34":1}}],["可以看出",{"2":{"15":1}}],["字段",{"2":{"16":1}}],["则放弃添加",{"2":{"37":1}}],["则需要扩容",{"2":{"20":1}}],["则",{"2":{"16":1}}],["如果此时table的结点个数大于扩容所需容量",{"2":{"37":1}}],["如果下一个结点为空",{"2":{"37":1}}],["如果不重复就添加在链表最后",{"2":{"37":1}}],["如果某个桶中的node数量达到8且该桶是一个链表",{"2":{"36":1}}],["如果key相同",{"2":{"33":1}}],["如果希望线程同步",{"2":{"21":1}}],["如果所需最小容量大于当前集合容量",{"2":{"20":1}}],["如果elementdata是空数组",{"2":{"20":1}}],["如果类没有定义",{"2":{"16":1}}],["如果有",{"2":{"16":1}}],["方法",{"2":{"16":2,"37":1}}],["方法可以判断是否有下一个元素",{"2":{"14":1}}],["方法可以让指针后移一位并返回移动后的位置上的元素",{"2":{"14":1}}],["其内保存了所有的value",{"2":{"35":1}}],["其内保存所有的key",{"2":{"35":1}}],["其内元素的数据类型是实现了map中的entry接口的类",{"2":{"34":1}}],["其vulue使用了一个静态的常量",{"2":{"30":1}}],["其次检查类中是否定义了",{"2":{"16":1}}],["其作用是为",{"2":{"16":1}}],["序列化机制会先检查该类是否实现了",{"2":{"16":1}}],["序列化某个java对象时",{"2":{"16":1}}],["时table表的大小",{"2":{"38":1}}],["时需要进行扩容操作",{"2":{"36":1}}],["时",{"2":{"16":1}}],["当添加失败时",{"2":{"37":1}}],["当该链表上的结点个数大于等于8",{"2":{"37":1}}],["当table当前元素个数达到0",{"2":{"38":1}}],["当table",{"2":{"37":1}}],["当要存放到的tab",{"2":{"37":1}}],["当node个数超过加载因子",{"2":{"36":1}}],["当newcapacity大于数组最大长度",{"2":{"20":1,"25":1}}],["当某个桶中的node个数小于等于6且该桶是红黑树",{"2":{"36":1}}],["当l为空时说明是第一次添加元素",{"2":{"28":1}}],["当使用index时",{"2":{"27":1}}],["当使用无参构造器时",{"2":{"20":1}}],["当oldcapacity为0时",{"2":{"20":1}}],["当一个字段被标记为",{"2":{"16":1}}],["当前实际大小",{"2":{"16":1}}],["被称作标记接口",{"2":{"16":1}}],["标记接口",{"2":{"16":1}}],["name",{"2":{"40":1}}],["native",{"2":{"40":1}}],["n",{"2":{"36":1,"37":4}}],["null的hash值为0",{"2":{"36":1}}],["null",{"2":{"28":2,"34":1,"37":11,"38":16,"40":3,"41":1}}],["node类",{"2":{"36":1}}],["node",{"2":{"26":7,"28":3,"34":1,"36":3,"37":3,"38":9}}],["note",{"2":{"16":1,"26":1}}],["newtab",{"2":{"38":7}}],["newthr即threshold也扩容为原来的两倍",{"2":{"38":1}}],["newthr",{"2":{"38":6}}],["newcap",{"2":{"38":8}}],["newcapacity为0",{"2":{"20":1}}],["newcapacity",{"2":{"20":6,"25":6}}],["newnode",{"2":{"28":4,"37":2}}],["new",{"2":{"14":2,"18":1,"19":2,"21":1,"22":2,"23":2,"28":1,"30":1,"34":1,"37":1,"38":1}}],["next四个属性",{"2":{"37":1}}],["nextele",{"2":{"14":2}}],["next",{"2":{"12":1,"14":2,"26":4,"28":2,"35":1,"36":1,"37":2,"38":9}}],["操作元素",{"2":{"15":1}}],["前闭后开",{"2":{"15":1}}],["根据下标获取元素",{"2":{"15":1}}],["下面是list在collection的基础上重写或者多出的几个重要方法",{"2":{"15":1}}],["增强for",{"2":{"35":1}}],["增强for来遍历元素了",{"2":{"34":1}}],["增强for的底层仍然是迭代器",{"2":{"14":1}}],["增强for遍历",{"2":{"14":1}}],["需要重置迭代器指针以便下一次遍历",{"2":{"14":1}}],["迭代器",{"2":{"35":1}}],["迭代器指针指向集合最后一个元素",{"2":{"14":1}}],["迭代器遍历",{"2":{"14":1}}],["1代表第一个结点",{"2":{"37":1}}],["16",{"2":{"36":1,"37":1}}],["1",{"2":{"14":2,"20":3,"25":1,"36":3,"37":4,"38":4,"40":1,"43":1}}],["10的vector",{"2":{"22":1}}],["10",{"2":{"14":2,"16":1,"20":1,"22":2,"23":1}}],["++j",{"2":{"38":1}}],["++size",{"2":{"37":1}}],["++modcount",{"2":{"37":1}}],["++bincount",{"2":{"37":1}}],["+",{"2":{"14":2,"19":1,"20":2,"23":1,"25":2,"35":4,"38":1,"40":2,"43":1}}],["0",{"2":{"14":2,"19":2,"20":3,"23":2,"24":1,"25":4,"26":1,"36":2,"37":3,"38":7,"40":6}}],[">=",{"2":{"37":1,"38":2}}],[">>>",{"2":{"37":1}}],[">>",{"2":{"20":1}}],[">",{"2":{"13":2,"19":1,"20":2,"25":3,"28":1,"37":1,"38":2,"40":1}}],["返回null代表添加成功",{"2":{"37":1}}],["返回value",{"2":{"37":1}}],["返回一个新数组",{"2":{"20":1}}],["返回一个迭代器对象",{"2":{"12":1}}],["返回添加元素后集合的大小",{"2":{"20":1}}],["返回从formlist到tolist位置处的子集合",{"2":{"15":1}}],["返回object在集合中最后一次出现的位置",{"2":{"15":1}}],["返回object在集合中首次出现的位置",{"2":{"15":1}}],["返回下一个元素",{"2":{"12":1}}],["hitail",{"2":{"38":6}}],["hihead",{"2":{"38":3}}],["highlighted",{"2":{"7":2}}],["highlighting",{"0":{"7":1},"2":{"7":2}}],["h",{"2":{"37":3,"40":6}}],["hashtable直接使用键的hashcode",{"2":{"43":1}}],["hashtable使用纯链表结构来解决哈希冲突",{"2":{"43":1}}],["hashtable会将容量变为原来的2倍加1",{"2":{"43":1}}],["hashtable底层数据结构的实现与hashmap基本相同",{"2":{"43":1}}],["hashtable已经是时代的眼泪",{"2":{"43":1}}],["hashtable",{"0":{"43":1}}],["hash值相同",{"2":{"37":1}}],["hash方法计算我们要添加的元素的hash值",{"2":{"37":1}}],["hash",{"2":{"36":2,"37":14,"38":2,"40":5}}],["hashcode",{"0":{"40":1},"2":{"33":1,"37":1,"40":9}}],["hashmap底层维护的是一个数组",{"2":{"36":1}}],["hashmap特性",{"2":{"36":1}}],["hashmap中有一个字段entryset",{"2":{"34":1}}],["hashmap中的node实现了这个接口",{"2":{"34":1}}],["hashmap中的node类",{"2":{"34":1}}],["hashmap中的entryset方法",{"2":{"34":1}}],["hashmap中的entryset字段",{"2":{"34":1}}],["hashmap",{"0":{"36":1},"1":{"37":1,"38":1,"39":1,"40":1,"41":1},"2":{"30":1,"35":3,"36":1}}],["hashset底层是hashmap",{"2":{"30":1}}],["hashset特性",{"2":{"30":1}}],["hashset",{"0":{"30":1},"2":{"30":1}}],["hasnext",{"2":{"12":1,"14":2,"35":1}}],["hugecapacity",{"2":{"20":1,"25":1}}],["evict",{"2":{"37":2}}],["es",{"2":{"34":3}}],["entry继承了node",{"2":{"42":1}}],["entryset是hashmap的内部类",{"2":{"34":1}}],["entryset",{"0":{"34":1},"2":{"33":1,"34":5,"35":2,"36":1}}],["entry",{"2":{"33":1,"34":5,"35":5,"36":2}}],["ensurecapacityhelper",{"2":{"25":2}}],["ensurecapacityinternal",{"2":{"20":2}}],["ensureexplicitcapacity",{"2":{"20":2}}],["equals",{"0":{"41":1},"2":{"33":1,"36":1,"37":2,"41":3}}],["else",{"2":{"19":2,"28":1,"37":3,"38":8}}],["elementcount++",{"2":{"25":1}}],["elementcount",{"2":{"21":1,"25":1}}],["elementdata不为空数组",{"2":{"20":1}}],["elementdata定义如下",{"2":{"18":1}}],["elementdata",{"2":{"16":1,"17":1,"18":3,"19":3,"20":9,"21":1,"22":1,"23":1,"25":5}}],["element",{"2":{"15":2,"26":2,"40":3}}],["elem",{"2":{"14":2}}],["empty",{"2":{"18":3,"19":1,"20":1}}],["e",{"2":{"12":1,"13":2,"15":3,"20":3,"25":3,"26":2,"28":6,"30":1,"37":14,"38":16}}],["e>",{"2":{"12":1,"13":4,"15":4,"16":3,"21":3,"26":11,"28":2,"29":2,"30":3}}],["existing",{"2":{"37":1}}],["extends",{"2":{"13":2,"15":2,"16":1,"21":1,"26":1,"29":1,"30":1,"36":1}}],["extensions",{"2":{"6":1,"9":1}}],["extension",{"0":{"6":1},"1":{"7":1,"8":1,"9":1}}],["export",{"2":{"7":1}}],["examples",{"0":{"0":1,"6":1},"1":{"1":1,"2":1,"3":1,"4":1,"5":1,"7":1,"8":1,"9":1}}],["对该iterable对象内的每个元素执行某种操作",{"2":{"12":1}}],["lotail",{"2":{"38":6}}],["lohead",{"2":{"38":3}}],["loadfactor",{"2":{"38":1,"42":2}}],["load",{"2":{"36":1,"38":3}}],["loading",{"2":{"11":1}}],["l",{"2":{"28":4}}],["last",{"2":{"26":1,"28":2}}],["lastindexof",{"2":{"15":1}}],["lt",{"2":{"21":1,"22":4}}],["length",{"2":{"20":2,"25":2,"37":2,"38":1,"40":2}}],["linklast",{"2":{"28":2}}],["linkedhashmap增加了一个构造函数",{"2":{"42":1}}],["linkedhashmap多了一个独立于桶数组+链表",{"2":{"42":1}}],["linkedhashmap中的每个结点是一个entry",{"2":{"42":1}}],["linkedhashmap与hashmap基本结构相同",{"2":{"42":1}}],["linkedhashmap",{"0":{"42":1},"2":{"42":1}}],["linkedhashset特性",{"2":{"31":1}}],["linkedhashset",{"0":{"31":1}}],["linkedlist特性",{"0":{"27":1}}],["linkedlist",{"0":{"26":1},"1":{"27":1,"28":1},"2":{"26":1}}],["linkelist是对deque的链表实现",{"2":{"26":1}}],["linedlist同时实现了list接口和deque接口",{"2":{"27":1}}],["linedlist底层数据结构是一个保存了首元素和尾元素的双向链表",{"2":{"27":1}}],["line",{"2":{"7":1}}],["like",{"2":{"7":1}}],["list通过索引",{"2":{"15":1}}],["list接口是collection接口的子接口",{"2":{"15":1}}],["list",{"0":{"15":1},"2":{"5":1,"9":1,"15":2,"16":1,"18":1,"20":1,"21":1,"26":1}}],["j",{"2":{"38":7}}],["jvm会调用这个方法来处理对象的序列化",{"2":{"16":1}}],["jvm",{"2":{"16":2}}],["javafinal",{"2":{"37":1,"38":1}}],["javafor",{"2":{"20":1}}],["javaset",{"2":{"35":2}}],["javastatic",{"2":{"34":1,"36":1}}],["javatransient",{"2":{"34":2}}],["javainterface",{"2":{"34":1}}],["javaprivate",{"2":{"18":1,"20":1,"25":1}}],["javapublic",{"2":{"12":2,"13":1,"15":1,"16":1,"19":1,"21":1,"23":3,"24":1,"25":1,"26":1,"28":1,"29":1,"30":1,"33":1,"34":1,"36":1,"37":1,"40":6,"41":2,"42":1}}],["javaarraylist",{"2":{"18":1}}],["java关键字",{"2":{"16":1}}],["java",{"2":{"16":2,"18":1,"20":4,"21":1,"25":1,"26":1,"28":1,"30":1,"37":2,"40":1}}],["javacollection",{"2":{"14":2}}],["java集合体系图",{"0":{"11":1}}],["jsexport",{"2":{"7":1}}],["小王✌️👀✌️",{"2":{"10":1}}],["作者",{"2":{"10":1}}],["集合",{"0":{"10":1},"1":{"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1}}],["```",{"2":{"7":1}}],["4",{"2":{"7":1,"36":1,"38":1}}],["was",{"2":{"38":1}}],["warning",{"2":{"8":6,"21":1,"43":1}}],["writeobject",{"2":{"16":2}}],["while",{"2":{"14":1,"35":1,"38":1}}],["with",{"2":{"7":1}}],["works",{"2":{"0":1}}],["obj",{"2":{"41":2}}],["object类的equals方法",{"2":{"41":1}}],["object类的hashcode方法是一个本地方法",{"2":{"40":1}}],["object>",{"2":{"30":1}}],["objectoutputstream",{"2":{"16":2}}],["object数组",{"2":{"16":1}}],["object",{"2":{"13":2,"14":2,"15":3,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"30":1,"33":5,"35":2,"37":3,"40":4,"41":3}}],["objects类的equals方法",{"2":{"41":1}}],["objects类的hash方法",{"2":{"40":1}}],["objects类的hashcode方法",{"2":{"40":1}}],["objects",{"2":{"12":1,"40":1}}],["override",{"2":{"40":1}}],["overflow",{"2":{"20":1}}],["order",{"2":{"38":1}}],["oldthr",{"2":{"38":4}}],["oldtab",{"2":{"38":7}}],["oldcap",{"2":{"38":9}}],["oldcapacity",{"2":{"20":3,"25":3,"43":1}}],["oldcapacity记录当前集合长度",{"2":{"20":1,"25":1}}],["oldvalue",{"2":{"37":3}}],["onlyifabsent",{"2":{"37":2}}],["o",{"2":{"13":2,"15":1,"33":1,"35":2,"40":3}}],["output",{"2":{"7":1,"8":1}}],["out",{"2":{"5":1,"9":1,"14":2,"16":1,"35":3}}],["of",{"2":{"0":2,"5":1,"6":1,"9":1}}],["rawtypes",{"2":{"38":1}}],["randomaccess",{"2":{"16":2,"21":1}}],["result",{"2":{"40":4}}],["results",{"0":{"1":1},"1":{"2":1,"3":1,"4":1},"2":{"0":1}}],["resize",{"0":{"38":1},"2":{"37":2,"38":1}}],["rehashing",{"2":{"36":1}}],["removeall",{"2":{"13":1}}],["remove",{"2":{"13":1,"33":1}}],["requirenonnull",{"2":{"12":1}}],["return",{"2":{"7":2,"20":3,"25":1,"28":1,"34":1,"37":5,"38":2,"40":7,"41":2}}],["runtime",{"0":{"0":1},"1":{"1":1,"2":1,"3":1,"4":1,"5":1},"2":{"0":1,"5":1}}],["==null",{"2":{"37":1}}],["==",{"2":{"19":1,"20":1,"28":1,"34":1,"37":10,"38":6,"40":3,"41":2}}],["=",{"2":{"0":1,"14":7,"16":1,"18":3,"19":2,"20":8,"22":2,"23":2,"25":6,"26":4,"28":5,"34":2,"35":4,"36":6,"37":23,"38":41,"40":8,"41":1}}],["ft",{"2":{"38":3}}],["false",{"2":{"37":1,"42":1}}],["factor值为0",{"2":{"38":1}}],["factor",{"2":{"36":1,"38":2}}],["float",{"2":{"36":1,"38":3,"42":1}}],["first",{"2":{"26":1,"28":1}}],["final",{"2":{"16":1,"18":1,"28":2,"36":8,"37":3,"38":1}}],["files",{"2":{"0":1}}],["features",{"2":{"7":1}}],["full",{"2":{"5":1,"9":1}}],["frontmatter",{"0":{"4":1},"2":{"0":3,"4":1}}],["fromindex",{"2":{"15":1}}],["from",{"2":{"0":1}}],["foreach",{"2":{"12":1}}],["foreach方法",{"2":{"12":1}}],["for",{"2":{"0":1,"5":1,"9":1,"12":1,"14":3,"35":2,"37":2,"38":1,"40":2}}],["val",{"2":{"40":2}}],["values是一个collection集合",{"2":{"35":1}}],["values",{"2":{"33":1,"34":2,"35":1,"40":2}}],["value",{"2":{"28":1,"33":3,"36":1,"37":10,"38":2,"40":5}}],["v",{"2":{"33":4,"34":1,"36":1,"37":5}}],["v>>",{"2":{"33":1,"34":3,"36":1}}],["v>",{"2":{"33":2,"34":4,"36":7,"37":4,"38":9}}],["vector是线程安全的",{"2":{"22":1}}],["vector特性",{"0":{"22":1}}],["vector所有方法被synchronized修饰",{"2":{"21":1}}],["vector",{"0":{"21":1},"1":{"22":1,"23":1,"24":1,"25":1},"2":{"21":1,"22":6,"23":3,"24":1}}],["void",{"2":{"12":1,"13":1,"15":1,"16":1,"20":3,"25":2,"28":1,"33":1}}],["vue",{"2":{"0":1}}],["vitepress",{"2":{"0":2,"6":1,"7":1}}],["min",{"2":{"36":1}}],["mincapacity",{"2":{"20":12,"25":7}}],["modcount++",{"2":{"20":1,"25":1,"28":1}}],["modcount用以记录集合被修改的次数",{"2":{"20":1}}],["more",{"0":{"5":1,"9":1}}],["msg",{"2":{"7":2}}],["mapping",{"2":{"37":1}}],["map的遍历",{"0":{"35":1}}],["map接口中的entry接口",{"2":{"34":1}}],["map在添加元素时不能添加相同key元素",{"2":{"33":1}}],["map用于保存具有映射关系的数据key",{"2":{"33":1}}],["map特性",{"2":{"33":1}}],["map",{"0":{"33":1},"1":{"34":1,"35":1},"2":{"30":1,"33":2,"34":4,"35":2,"36":3,"37":1}}],["maximum",{"2":{"36":1,"38":4}}],["max",{"2":{"20":2,"25":1,"38":2}}],["math",{"2":{"20":1}}],["markdown",{"0":{"6":1},"1":{"7":1,"8":1,"9":1},"2":{"6":1,"9":1}}],["main",{"2":{"0":1}}],["md```js",{"2":{"7":1}}],["md",{"2":{"0":2,"8":1}}],["i表示要添加的结点应该放在的链表数组中的索引",{"2":{"37":1}}],["illegal",{"2":{"19":1,"23":1}}],["illegalargumentexception",{"2":{"19":1,"23":1}}],["if",{"2":{"19":2,"20":4,"23":1,"25":3,"28":1,"37":10,"38":14,"40":2}}],["io",{"2":{"16":2,"21":1,"26":1,"30":1}}],["implements",{"2":{"16":1,"21":1,"26":1,"30":1,"34":1,"36":2}}],["import",{"2":{"0":1}}],["i++",{"2":{"14":2,"20":1,"40":1}}],["i",{"2":{"14":6,"20":3,"37":7,"40":3}}],["isempty",{"2":{"13":1,"33":1}}],["is",{"2":{"8":10}}],["instanceof",{"2":{"37":1,"38":1}}],["initial",{"2":{"36":1,"38":5}}],["initialcapacity",{"2":{"19":5,"23":6,"24":2,"42":2}}],["indexof",{"2":{"15":1}}],["index",{"2":{"15":5}}],["integer",{"2":{"22":2,"38":2}}],["interface",{"2":{"12":2,"13":1,"15":1,"29":1,"33":1}}],["int",{"2":{"13":1,"14":2,"15":7,"16":2,"19":1,"20":8,"21":2,"23":3,"24":1,"25":4,"26":1,"33":2,"36":6,"37":6,"38":7,"40":12,"42":1}}],["info",{"2":{"8":4}}],["input",{"2":{"7":1,"8":1}}],["in",{"2":{"0":1,"6":1,"38":1}}],["item",{"2":{"26":2}}],["iterator有一个指向集合元素的指针",{"2":{"14":1}}],["iterator接口定义",{"2":{"12":1}}],["iterator",{"2":{"12":3,"13":2,"14":7,"35":5}}],["iterable接口定义",{"2":{"12":1}}],["iterable",{"0":{"12":1},"2":{"12":1,"13":1}}],["it",{"2":{"0":1}}],["char",{"2":{"40":1}}],["check",{"2":{"5":1,"9":1}}],["calculatecapacity",{"2":{"20":2}}],["capacityincrement值为0",{"2":{"25":1}}],["capacityincrement",{"2":{"21":1,"23":3,"25":2}}],["capacity常量值为10",{"2":{"20":1}}],["capacity和mincapacity的最大值",{"2":{"20":1}}],["capacity",{"2":{"16":1,"19":1,"20":1,"23":1,"36":3,"38":9}}],["can",{"2":{"0":1}}],["cloneable",{"2":{"16":2,"21":1,"26":1,"30":1,"36":1}}],["class",{"2":{"16":1,"21":1,"26":2,"30":1,"34":1,"36":2}}],["clear",{"2":{"13":1,"33":1}}],["c",{"2":{"13":3,"15":1}}],["copyof",{"2":{"20":1,"25":1}}],["copyof方法",{"2":{"20":1}}],["code",{"2":{"20":1}}],["col",{"2":{"14":7}}],["collection集合都实现了iterable接口",{"2":{"14":1}}],["collection遍历",{"0":{"14":1}}],["collection",{"0":{"13":1},"1":{"14":1},"2":{"13":4,"15":2,"29":1,"33":1,"34":1}}],["containsvalue",{"2":{"33":1}}],["containskey",{"2":{"33":1}}],["containsall",{"2":{"13":1}}],["contains",{"2":{"13":1}}],["containers",{"0":{"8":1}}],["conscious",{"2":{"20":1}}],["consumer",{"2":{"12":1}}],["const",{"2":{"0":1}}],["custom",{"0":{"8":1}}],["current",{"2":{"0":1}}],["do",{"2":{"38":1}}],["double",{"2":{"38":1}}],["documentation",{"2":{"5":1,"9":1}}],["dangerous",{"2":{"8":2}}],["danger",{"2":{"8":2}}],["data",{"0":{"2":1,"3":1},"2":{"0":3,"7":2}}],["deque",{"2":{"26":2}}],["details",{"2":{"8":4}}],["defaultcapacity",{"2":{"18":2,"20":1}}],["default",{"2":{"7":2,"12":1,"16":1,"20":2,"36":2,"38":7}}],["demonstrates",{"2":{"0":1,"6":1}}],["string的hashcode方法如下",{"2":{"40":1}}],["string",{"2":{"40":1}}],["static",{"2":{"16":2,"18":1,"20":1,"26":1,"36":6,"37":3,"38":1,"40":4,"41":1}}],["split",{"2":{"38":1}}],["serializable这三个接口内部都为空",{"2":{"16":1}}],["serializable",{"2":{"16":2,"21":1,"26":1,"30":1,"36":1}}],["set接口并不保证元素的插入顺序",{"2":{"29":1}}],["set不允许包含重复元素",{"2":{"29":1}}],["set可以看作是一些行为规范",{"2":{"29":1}}],["set相对于collection没有新增任何方法",{"2":{"29":1}}],["set特性",{"2":{"29":1}}],["set",{"0":{"29":1},"2":{"15":1,"29":1,"30":1,"33":2,"34":4,"35":5,"36":1}}],["setup>",{"2":{"0":1}}],["suppresswarnings",{"2":{"38":1}}],["super",{"2":{"12":1,"23":1}}],["sublist",{"2":{"15":1}}],["synchronized",{"2":{"25":1}}],["synchronizedlist",{"2":{"21":1}}],["syntax",{"0":{"7":1},"2":{"7":1}}],["system",{"2":{"14":2,"35":3}}],["size++",{"2":{"20":1,"28":1}}],["size",{"2":{"13":1,"16":1,"20":2,"25":1,"26":1,"33":1}}],["site",{"2":{"0":1}}],["shiki",{"2":{"7":1}}],["script>",{"2":{"0":1}}],["script",{"2":{"0":1}}],["some",{"2":{"0":1,"6":1}}],["age",{"2":{"40":1}}],["afternodeinsertion",{"2":{"37":1}}],["afternodeaccess",{"2":{"37":1}}],["amp",{"2":{"34":1,"36":1}}],["abstractmap",{"2":{"36":1}}],["abstractmap中",{"2":{"34":1}}],["abstractset",{"2":{"30":1}}],["abstractsequentiallist",{"2":{"26":1}}],["abstractlist",{"2":{"16":1,"21":1}}],["arrays类中的hashcode方法",{"2":{"40":1}}],["arrays",{"2":{"20":1,"25":1,"40":1}}],["array",{"2":{"20":1,"25":1}}],["arraylist底层维护的是一个可以动态扩容的object数组transient",{"2":{"17":1}}],["arraylist特性",{"0":{"17":1}}],["arraylist",{"0":{"16":1},"1":{"17":1,"18":1,"19":1,"20":1},"2":{"14":2,"16":1,"18":2,"19":1,"21":1}}],["add方法",{"2":{"20":1}}],["addall",{"2":{"13":1,"15":1}}],["add",{"2":{"13":1,"14":2,"15":1,"20":2,"25":1,"28":1,"37":1}}],["additional",{"2":{"7":1}}],["accept",{"2":{"12":1}}],["accessorder",{"2":{"42":2}}],["access",{"2":{"0":1}}],["action",{"2":{"12":3}}],["a",{"2":{"8":8,"40":3,"41":4}}],["an",{"2":{"8":2}}],["and",{"2":{"0":2}}],["apis",{"2":{"0":1,"5":1}}],["api",{"0":{"0":1},"1":{"1":1,"2":1,"3":1,"4":1,"5":1},"2":{"0":1}}],["tab",{"2":{"37":10}}],["table大小大于64",{"2":{"37":1}}],["table",{"2":{"36":1,"37":1,"38":2}}],["treemap",{"0":{"45":1}}],["treenode",{"2":{"37":2,"38":2}}],["treeifybin",{"2":{"37":2}}],["treeify",{"2":{"36":2,"37":2}}],["treeset",{"0":{"32":1}}],["true",{"2":{"20":1,"25":1,"28":1,"36":1,"37":1,"42":1}}],["transient",{"2":{"16":4,"26":3,"30":1,"34":1,"36":2}}],["t",{"2":{"12":3}}],["t>",{"2":{"12":3}}],["tip",{"2":{"8":4}}],["toindex",{"2":{"15":1}}],["to",{"2":{"0":1}}],["threshold为当前table的需要扩容时的大小",{"2":{"38":1}}],["threshold",{"2":{"36":2,"37":3,"38":5}}],["throw",{"2":{"19":1,"23":1}}],["theme",{"0":{"2":1},"2":{"0":4,"2":1}}],["the",{"2":{"0":3,"5":2,"6":1,"9":2}}],["this",{"2":{"0":1,"6":1,"8":10,"12":1,"18":1,"19":2,"23":4,"24":1,"37":1,"38":1,"41":1}}],["b",{"2":{"41":3}}],["break",{"2":{"37":2}}],["bincount",{"2":{"37":2}}],["block",{"2":{"8":2}}],["boolean",{"2":{"12":1,"13":7,"15":1,"20":1,"25":1,"28":1,"33":4,"37":3,"41":2,"42":1}}],["box",{"2":{"8":2}}],["both",{"2":{"0":1}}],["built",{"2":{"6":1}}],["be",{"2":{"0":1}}],["by",{"2":{"0":1,"6":1,"7":1}}],["placed",{"2":{"38":1}}],["p记录了table",{"2":{"37":1}}],["p",{"2":{"37":10}}],["puttreeval",{"2":{"37":1}}],["putval",{"2":{"37":2}}],["put",{"2":{"33":1,"37":2}}],["public",{"2":{"18":1,"20":1,"37":1,"40":1}}],["powered",{"2":{"7":1}}],["preserve",{"2":{"38":1}}],["present",{"2":{"30":1,"37":3}}],["prev",{"2":{"26":4,"28":1}}],["pre>",{"2":{"0":6}}],["propertise",{"0":{"44":1}}],["protected",{"2":{"21":3}}],["provides",{"2":{"7":1}}],["provided",{"2":{"0":1,"6":1}}],["private",{"2":{"16":3,"20":3,"25":1,"26":1,"30":1,"37":1,"40":1}}],["println",{"2":{"14":2,"35":3}}],["page",{"0":{"3":1,"4":1},"2":{"0":7,"3":1,"6":1}}]],"serializationVersion":2}';export{e as default};
